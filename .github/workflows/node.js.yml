name: Node.js CI/CD with Kubernetes and Helm

on:
  push:
    branches: ["main"]

jobs:
  deploy-on-ec2:
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Debug npm cache
        run: |
          echo "npm cache directory: $(npm config get cache)"
          mkdir -p $(npm config get cache)
          ls -la $(npm config get cache)

      - name: Install Dependencies
        run: |
          npm install
          echo "NODE_OPTIONS=--max-old-space-size=4096" >> $GITHUB_ENV

      - name: Install PM2
        run: npm install -g pm2

      - name: Set up Environment Variables
        run: |
          touch .env
          echo "${{ secrets.PROD_ENV_FILE }}" > .env

      - name: Restart Backend with pm2
        run: pm2 restart BackendAPI

  docker-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x" # Match the Node.js version used in the deploy job
          cache: "npm"

      - name: Debug npm cache
        run: |
          echo "npm cache directory: $(npm config get cache)"
          mkdir -p $(npm config get cache)
          ls -la $(npm config get cache)

      - name: Install Dependencies
        run: |
          npm install
          echo "NODE_OPTIONS=--max-old-space-size=4096" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Create .env for Docker Build
        run: |
          echo "MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}" >> .env
          echo "MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}" >> .env
          echo "MONGO_DB_USERNAME=${{ secrets.MONGO_DB_USERNAME }}" >> .env
          echo "MONGO_DB_PASSWORD=${{ secrets.MONGO_DB_PASSWORD }}" >> .env
          echo "MONGO_DB=${{ secrets.MONGO_DB }}" >> .env

      - name: Build Docker Image with Environment Variables
        run: |
          timeout 15m docker build \
            --memory=4g --cpus=2 \
            --build-arg MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }} \
            --build-arg MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }} \
            --build-arg MONGO_DB_USERNAME=${{ secrets.MONGO_DB_USERNAME }} \
            --build-arg MONGO_DB_PASSWORD=${{ secrets.MONGO_DB_PASSWORD }} \
            --build-arg MONGO_DB=${{ secrets.MONGO_DB }} \
            -t developerhacker/password-app-api_backend .

      - name: Push Docker Image to Docker Hub
        run: |
          timeout 10m docker push developerhacker/password-app-api_backend
